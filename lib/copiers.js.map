{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/copiers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MULTIMIX/COPIERS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nÏƒ_unknown_type            = Symbol.for 'unknown_type'\nCOPIERS                   = @\n\n\n#===========================================================================================================\n# RAW COPIERS\n#-----------------------------------------------------------------------------------------------------------\n@RAW = {}\n\n#-----------------------------------------------------------------------------------------------------------\n@RAW.object = ( x, seed ) ->\n  ### shamelessly copied from https://github.com/nrn/universal-copy ###\n  R = seed ? Object.create Object.getPrototypeOf x\n  ### copy properties here or put the below into a `finalize` method ###\n  if      Object.isFrozen     x then Object.freeze            R\n  if      Object.isSealed     x then Object.seal              R\n  unless  Object.isExtensible x then Object.preventExtensions R\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@RAW.by_constructor = ( x ) ->\n  ### shamelessly copied from https://github.com/nrn/universal-copy ###\n  R = new x.constructor x\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@RAW.id   = ( x ) -> x\n@RAW.dont = ( x ) -> throw new Error \"unable to copy value of type #{CND.type_of x}\"\n# @RAW.list = ( x ) -> @object x, new Array x.length\n@RAW.list = ( x ) -> []\n\n#-----------------------------------------------------------------------------------------------------------\n@RAW.set  = ( x ) ->\n  R = new Set()\n  x.forEach ( value ) -> R.add deep_copy x\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@RAW.map  = ( x ) ->\n  R = new Map()\n  x.forEach ( value, key ) -> R.set ( deep_copy key ), ( deep_copy value )\n  return R\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n###\n  '[object Object]': copyObject,\n  '[object Array]': copyArray,\n  '[object Error]': justDont,\n  '[object Map]': copyMap,\n  '[object Set]': copySet,\n\n  '[object Promise]': justDont,\n  '[object XMLHttpRequest]': justDont,\n  '[object NodeList]': copyArray,\n  '[object ArrayBuffer]': copySlice,\n  '[object Int8Array]': copyConstructor,\n  '[object Uint8Array]': copyConstructor,\n  '[object Uint8ClampedArray]': copyConstructor,\n  '[object Int16Array]': copyConstructor,\n  '[object Uint16Array]': copyConstructor,\n  '[object Int32Array]': copyConstructor,\n  '[object Uint32Array]': copyConstructor,\n  '[object Float32Array]': copyConstructor,\n  '[object Float64Array]': copyConstructor\n###\n\n#-----------------------------------------------------------------------------------------------------------\ndo ->\n  #.........................................................................................................\n  copy_id             = ( x ) -> COPIERS.RAW.id             x\n  copy_object         = ( x ) -> COPIERS.RAW.object         x\n  copy_list           = ( x ) -> COPIERS.RAW.list           x\n  copy_map            = ( x ) -> COPIERS.RAW.map            x\n  copy_set            = ( x ) -> COPIERS.RAW.set            x\n  copy_by_constructor = ( x ) -> COPIERS.RAW.by_constructor x\n  dont_copy           = ( x ) -> COPIERS.RAW.dont           x\n  #.........................................................................................................\n  type_descriptions = [\n    #.......................................................................................................\n    { type: 'boolean',       has_fields: no,  copy: copy_id,                                              }\n    { type: 'null',          has_fields: no,  copy: copy_id,                                              }\n    { type: 'text',          has_fields: no,  copy: copy_id,                                              }\n    { type: 'undefined',     has_fields: no,  copy: copy_id,                                              }\n    { type: 'infinity',      has_fields: no,  copy: copy_id,                                              }\n    { type: 'number',        has_fields: no,  copy: copy_id,                                              }\n    { type: 'nan',           has_fields: no,  copy: copy_id,                                              }\n    #.......................................................................................................\n    { type: 'pod',           has_fields: yes, copy: copy_object,                                          }\n    { type: 'list',          has_fields: yes, copy: copy_list,                                            }\n    { type: 'map',           has_fields: yes, copy: copy_map,                                             }\n    { type: 'set',           has_fields: yes, copy: copy_set,                                             }\n    #.......................................................................................................\n    { type: 'date',          has_fields: yes, copy: copy_by_constructor,                                  }\n    { type: 'regex',         has_fields: yes, copy: copy_by_constructor,                                  }\n    #.......................................................................................................\n    { type: 'buffer',        has_fields: yes, copy: dont_copy,                                            }\n    { type: 'arraybuffer',   has_fields: yes, copy: dont_copy,                                            }\n    { type: 'error',         has_fields: yes, copy: dont_copy,                                            }\n    { type: 'function',      has_fields: yes, copy: dont_copy,                                            }\n    { type: 'symbol',        has_fields: no,  copy: dont_copy,                                            }\n    # These do not work at the time being:\n    { type: 'weakmap',       has_fields: no,  copy: dont_copy,                                            }\n    { type: 'generator',     has_fields: no,  copy: dont_copy,                                            }\n    { type: 'arguments',     has_fields: no,  copy: dont_copy,                                            }\n    { type: 'global',        has_fields: no,  copy: dont_copy,                                            }\n    { type: Ïƒ_unknown_type,  has_fields: no,  copy: dont_copy,                                            }\n    #.......................................................................................................\n    ]\n  #.........................................................................................................\n  COPIERS.type_descriptions = {}\n  COPIERS.type_descriptions[ d[ 'type' ] ] = d for d in type_descriptions\n\n\n"
  ]
}