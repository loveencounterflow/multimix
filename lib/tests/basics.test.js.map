{
  "version": 3,
  "file": "basics.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/basics.test.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;;EAKA,QAAA,GAA4B,OAAA,CAAQ,MAAR,EAL5B;;;;EAQA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,MAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,QAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EApB5B;;;EAsBA,IAAA,GAA4B,OAAA,CAAQ,UAAR,EAtB5B;;;EA0BA,IAAC,CAAE,uBAAF,CAAD,GAA+B,QAAA,CAAE,CAAF,EAAK,IAAL,CAAA;AAC/B,QAAA,CAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,EAAA;IAAE,QAAA,GAA4B,OAAA,CAAQ,OAAR,EAA9B;;IAEQ,IAAN,MAAA,EAAA;MACE,OAAS,CAAE,CAAF,CAAA,EAAA;;AAEP,eAAO,CAAA,GAAI;MAFJ;;MAGT,OAAS,CAAE,CAAF,CAAA;AACP,eAAO,CAAE,IAAC,CAAA,OAAD,CAAS,CAAT,CAAF,CAAA,GAAiB;MADjB;;IAJX;IAMA,CAAA,GAAI,IAAI,CAAJ,CAAA;IACJ,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,OAAF,CAAU,GAAV,CAAP,EAAwB,GAAxB;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,OAAF,CAAU,GAAV,CAAP,EAAwB,GAAxB,EAVF;;IAYQ,IAAN,MAAA,EAAA,QAAgB,SAAhB;MACE,OAAS,CAAE,CAAF,CAAA,EAAA;;AAEP,eAAO,CAAA,GAAI;MAFJ;;MAGT,OAAS,CAAE,CAAF,CAAA;AACP,eAAO,CAAE,IAAC,CAAA,OAAD,CAAS,CAAT,CAAF,CAAA,GAAiB;MADjB;;IAJX;IAMA,CAAA,GAAI,IAAI,CAAJ,CAAA;IACJ,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,OAAF,CAAU,GAAV,CAAP,EAAwB,GAAxB;IACA,CAAC,CAAC,EAAF,CAAO,CAAC,CAAC,OAAF,CAAU,GAAV,CAAP,EAAwB,GAAxB;WACA,IAAA,CAAA;EAtB6B;AA1B/B",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# njs_util                  = require 'util'\nnjs_path                  = require 'path'\n# njs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'MULTIMIX/TESTS/BASICS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\npraise                    = CND.get_logger 'praise',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"classes with MultiMix\" ] = ( T, done ) ->\n  Multimix                  = require '../..'\n  #.........................................................................................................\n  class A\n    method1: ( x ) ->\n      # urge '^33442^', intertype.all_keys_of @\n      return x + 2\n    method2: ( x ) ->\n      return ( @method1 x ) * 2\n  a = new A()\n  T.eq ( a.method1 100 ), 102\n  T.eq ( a.method2 100 ), 204\n  #.........................................................................................................\n  class B extends Multimix\n    method1: ( x ) ->\n      # urge '^33442^', intertype.all_keys_of @\n      return x + 2\n    method2: ( x ) ->\n      return ( @method1 x ) * 2\n  b = new B()\n  T.eq ( b.method1 100 ), 102\n  T.eq ( b.method2 100 ), 204\n  done()\n\n"
  ]
}